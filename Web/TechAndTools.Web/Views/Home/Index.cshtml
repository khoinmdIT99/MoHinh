@using X.PagedList;
@using X.PagedList.Mvc.Common
@using X.PagedList.Mvc.Core

@model TechAndTools.Web.ViewModels.Home.HomeIndexViewModel

@{
    ViewData["Title"] = "Home";
}

@section Styles
{
    <link rel="stylesheet" type="text/css" href="~/css/shop_styles.css">
}

<div class="shop">
    <div class="container">
        <div class="row">
            <div class="col-lg-3">
                <div class="shop_sidebar">

                    @await Component.InvokeAsync("CategoriesFilter")

                    @await Component.InvokeAsync("BrandsFilter")

                </div>

            </div>

            <div class="col-lg-9">
                <div class="shop_content">
                    <div class="shop_bar clearfix">
                        <div class="shop_sorting">
                            <span>Sort by:</span>
                            <ul>
                                <li>
                                    <span class="sorting_text">Име<i class="fas fa-chevron-down"></i></span>
                                    <ul>
                                        @*<li class="shop_sorting_button" data-isotope-option='{ "sortBy": "original-order" }'>highest rated</li>*@
                                        <li class="shop_sorting_button" data-isotope-option='{ "sortBy": "name" }'>Име</li>
                                        <li class="shop_sorting_button" data-isotope-option='{ "sortBy": "price" }'>Цена</li>
                                    </ul>
                                </li>
                            </ul>
                        </div>
                    </div>

                    <div class="product_grid">
                        <div class="product_grid_border"></div>
                        @foreach (var product in Model.ProductsViewModels)
                        {
                            <div class="product_item is_new">
                                <div class="product_border"></div>
                                <div class="product_image d-flex flex-column align-items-center justify-content-center"><img src="@product.ImageUrl" alt=""></div>
                                <div class="product_content">
                                    <div class="product_price">@product.Price лв.</div>
                                    <div class="product_name"><div><a asp-controller="Products" asp-action="Details" asp-route-id="@product.Id" tabindex="0">@product.Name</a></div></div>
                                </div>
                                @if (product.IsOutOfStock)
                                {
                                    <div class="text-center text-danger">Out Of Stock</div>
                                }
                                else
                                {
                                    <div class="d-flex justify-content-between  mt-1">
                                        <div>
                                            <a class="btn btn-outline-primary mr-1" asp-area="" asp-controller="ShoppingCart" asp-action="Add" asp-route-id="@product.Id" asp-route-quantity="1"><i class="fa fa-cart-plus"></i></a>
                                        </div>
                                        <div>
                                            <a class="btn btn-outline-primary" asp-area="" asp-controller="Favorites" asp-action="AddToFavorites" asp-route-id="@product.Id"><i class="fas fa-heart"></i></a>
                                        </div>
                                    </div>
                                }
                            </div>
                        }

                    </div>
                    <div class="mt-3 d-flex justify-content-around">
                        @Html.PagedListPager((IPagedList)Model.ProductsViewModels, page => Url.Action("Index",
                            new
                                 {
                                PageNumber = page,
                                PageSize = Model.PageSize,
                                     CategoryId = Model.CategoryId,
                                 }),
                            new PagedListRenderOptions
                            {
                                MaximumPageNumbersToDisplay = 5,
                                LiElementClasses = new string[] { "page-item" },
                                PageClasses = new string[] { "page-link" }
                            })
                    </div>

                </div>
            </div>
        </div>
    </div>

    @section Scripts
{
        <script src="~/js/shop_custom.js"></script>
    }
